apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'
//apply plugin: 'androidx.navigation.safeargs'

Properties properties = new Properties()
if (project.rootProject.file("release.properties").exists()) {
    properties.load(project.rootProject.file('release.properties').newDataInputStream())
} else {
    properties.load(project.rootProject.file('debug.properties').newDataInputStream())
}
def googleMapsApiKey = properties.getProperty('com.google.android.geo.API_KEY')
def jcDecauxApiKey = properties.getProperty('com.developer.jcdecaux.API_KEY')

android {
    compileSdkVersion buildConfig.compileSdk

    defaultConfig {
        applicationId "ie.dublinmapper"
        minSdkVersion buildConfig.minSdk
        targetSdkVersion buildConfig.targetSdk
        versionCode buildConfig.version.code
        versionName buildConfig.version.name
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        manifestPlaceholders = [googleMapsApiKey: "$googleMapsApiKey",
                                jcDecauxApiKey  : "$jcDecauxApiKey"]
    }

    buildTypes {
        release {
            debuggable false
//            minifyEnabled true
//            shrinkResources true
//            useProguard true
//            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            debuggable true
            applicationIdSuffix = ".debug"
//            ext.enableCrashlytics = false
        }
    }

    flavorDimensions "default"
    productFlavors {
        prod {
            dimension "default"
        }
        mock {
            dimension "default"
            applicationIdSuffix = ".mock"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
//        prod.java.srcDirs += 'src/prod/kotlin'
        test.java.srcDirs += 'src/test/kotlin'
        mock.java.srcDirs += 'src/mock/kotlin'
        androidTest.java.srcDirs += 'src/androidTest/kotlin'
    }

    // Enables view caching in viewholders.
    // See: https://github.com/Kotlin/KEEP/blob/master/proposals/android-extensions-entity-caching.md
    androidExtensions {
        experimental = true
    }

}

dependencies {
    implementation project(':data')
    implementation project(':database')
    implementation project(':domain')
    implementation project(':repository')
    implementation project(':service')
    implementation project(':util')

//    implementation "androidx.lifecycle:lifecycle-viewmodel:2.0.0"
//    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.0.0"
//    implementation "androidx.lifecycle:lifecycle-extensions:2.0.0"

//    implementation "androidx.lifecycle:lifecycle-livedata:2.0.0"

//    implementation "android.arch.lifecycle:extensions:1.1.1"
//    implementation "android.arch.lifecycle:viewmodel:1.1.1"
//    compile group: 'android.arch.lifecycle', name: 'livedata', version: '1.1.1'
//    implementation group: 'android.arch.lifecycle', name: 'livedata-core', version: '1.1.1'

    implementation "io.reactivex.rxjava2:rxandroid:${versions.rx_android}"

    // Google services
//    implementation "com.google.android.gms:play-services-auth:$playServicesVersion"
    implementation "com.google.android.gms:play-services-maps:16.0.0"
    implementation "com.google.maps.android:android-maps-utils:0.5"
//    implementation "com.google.maps.android:android-maps-utils:15.0.1"
//    implementation "com.google.firebase:firebase-core:$firebaseVersion"
//    implementation "com.google.maps.android:android-maps-utils:$mapsUtilsVersion"

    implementation "com.google.dagger:dagger:${versions.dagger}"
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    kapt "com.google.dagger:dagger-compiler:${versions.dagger_compiler}"

    implementation "com.jakewharton.threetenabp:threetenabp:${versions.threetenabp}"

    implementation "com.xwray:groupie:${versions.groupie}"
    implementation "com.xwray:groupie-kotlin-android-extensions:${versions.groupie}"

    // Navigation
//    implementation "android.arch.navigation:navigation-ui-ktx:1.0.0-alpha07"
//    implementation "android.arch.navigation:navigation-fragment-ktx:1.0.0-alpha07"

    implementation 'com.bluelinelabs:conductor:3.0.0-rc1'
    implementation "com.hannesdorfmann.mosby3:mvp-conductor:${versions.mvp_conductor}"

    implementation "ma.glasnost.orika:orika-core:${versions.orika_core}"

    implementation "androidx.appcompat:appcompat:${versions.androidx.appcompat}"
    implementation "androidx.constraintlayout:constraintlayout:${versions.androidx.constraintlayout}"
    implementation "androidx.recyclerview:recyclerview:${versions.androidx.recyclerview}" //TODO is this needed?
    implementation "com.google.android.material:material:${versions.material}"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${versions.kotlin}"

    implementation "com.nytimes.android:store3:${versions.store3}"

    testImplementation project(path: ':service', configuration: 'testOutput')

    testImplementation "junit:junit:${testVersions.junit}"
    androidTestImplementation "androidx.test:core:${testVersions.androidx.core}"
    androidTestImplementation "androidx.test:runner:${testVersions.androidx.runner}"

    implementation "com.jakewharton.timber:timber:${versions.timber}"

    implementation("com.squareup.retrofit2:converter-gson:2.5.0")
    implementation("com.google.code.gson:gson:2.8.5")
    implementation("com.squareup.retrofit2:converter-simplexml:2.5.0")
    implementation("com.squareup.okhttp3:okhttp:3.12.1")

    implementation "androidx.room:room-runtime:${versions.androidx.room_runtime}" //TODO remove

    debugImplementation 'com.amitshekhar.android:debug-db:1.0.4'
}
